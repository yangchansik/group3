/* 게시판 */
DROP TABLE board 
	CASCADE CONSTRAINTS;

/* 게시판 종류 */
DROP TABLE b_list 
	CASCADE CONSTRAINTS;

/* 댓글 */
DROP TABLE reply 
	CASCADE CONSTRAINTS;

/* 파일게시판 */
DROP TABLE fileupload 
	CASCADE CONSTRAINTS;

/* 회원 */
DROP TABLE member 
	CASCADE CONSTRAINTS;

/* 찜 목록 */
DROP TABLE zzim_list 
	CASCADE CONSTRAINTS;

/* 캠핑장 */
DROP TABLE camp 
	CASCADE CONSTRAINTS;

/* 게시판 타입 */
DROP TABLE b_type 
	CASCADE CONSTRAINTS;

/* 게시판 카테고리 */
DROP TABLE b_cat 
	CASCADE CONSTRAINTS;

/* 답글게시판 */
DROP TABLE reboard 
	CASCADE CONSTRAINTS;

/* 관리자 */
DROP TABLE adminmember 
	CASCADE CONSTRAINTS;

/* 회원등급 */
DROP TABLE membergrade 
	CASCADE CONSTRAINTS;

/* 거래게시판 */
DROP TABLE trade 
	CASCADE CONSTRAINTS;

/* 글상태 */
DROP TABLE c_status 
	CASCADE CONSTRAINTS;

/* 게시판 */
CREATE TABLE board (
	idx NUMBER NOT NULL, /* 글번호 */
	id VARCHAR2(16) NOT NULL, /* 아이디 */
	bcode NUMBER NOT NULL, /* 게시판코드 */
	tcode NUMBER NOT NULL, /* 거래코드 */
	title VARCHAR2(100) NOT NULL, /* 글제목 */
	content VARCHAR2(4000) NOT NULL, /* 글내용 */
	readnum NUMBER NOT NULL, /* 조회수 */
	writedate TIMESTAMP NOT NULL, /* 작성일 */
	ref NUMBER NOT NULL, /* 그룹벉호 */
	dept NUMBER NOT NULL, /* 들여쓰기 */
	step NUMBER NOT NULL, /* 답변정렬 */
	cocode NUMBER NOT NULL /* 글상태 */
);

COMMENT ON TABLE board IS '게시판';

COMMENT ON COLUMN board.idx IS '글번호';

COMMENT ON COLUMN board.id IS '아이디';

COMMENT ON COLUMN board.bcode IS '게시판코드';

COMMENT ON COLUMN board.tcode IS '거래코드';

COMMENT ON COLUMN board.title IS '글제목';

COMMENT ON COLUMN board.content IS '글내용';

COMMENT ON COLUMN board.readnum IS '조회수';

COMMENT ON COLUMN board.writedate IS '작성일';

COMMENT ON COLUMN board.ref IS '그룹벉호';

COMMENT ON COLUMN board.dept IS '들여쓰기';

COMMENT ON COLUMN board.step IS '답변정렬';

COMMENT ON COLUMN board.cocode IS '글상태';

CREATE UNIQUE INDEX PK_board
	ON board (
		idx ASC
	);

ALTER TABLE board
	ADD
		CONSTRAINT PK_board
		PRIMARY KEY (
			idx
		);

/* 게시판 종류 */
CREATE TABLE b_list (
	bcode NUMBER NOT NULL, /* 게시판코드 */
	bname VARCHAR2(100) NOT NULL, /* 게시판이름 */
	typeno NUMBER NOT NULL, /* 게시판형식번호 */
	ccode NUMBER NOT NULL /* 카테고리코드 */
);

COMMENT ON TABLE b_list IS '게시판 종류';

COMMENT ON COLUMN b_list.bcode IS '게시판코드';

COMMENT ON COLUMN b_list.bname IS '게시판이름';

COMMENT ON COLUMN b_list.typeno IS '게시판형식번호';

COMMENT ON COLUMN b_list.ccode IS '카테고리코드';

CREATE UNIQUE INDEX PK_b_list
	ON b_list (
		bcode ASC
	);

ALTER TABLE b_list
	ADD
		CONSTRAINT PK_b_list
		PRIMARY KEY (
			bcode
		);

/* 댓글 */
CREATE TABLE reply (
	replyidx NUMBER NOT NULL, /* 댓글식별번호 */
	idx NUMBER NOT NULL, /* 글번호 */
	replycontent VARCHAR2(500) NOT NULL, /* 댓글내용 */
	replyid VARCHAR2(16) NOT NULL, /* 댓글아이디 */
	replydate TIMESTAMP NOT NULL, /* 댓글작성일 */
	cocode NUMBER /* 글상태 */
);

COMMENT ON TABLE reply IS '댓글';

COMMENT ON COLUMN reply.replyidx IS '댓글식별번호';

COMMENT ON COLUMN reply.idx IS '글번호';

COMMENT ON COLUMN reply.replycontent IS '댓글내용';

COMMENT ON COLUMN reply.replyid IS '댓글아이디';

COMMENT ON COLUMN reply.replydate IS '댓글작성일';

COMMENT ON COLUMN reply.cocode IS '글상태';

CREATE UNIQUE INDEX PK_reply
	ON reply (
		replyidx ASC
	);

ALTER TABLE reply
	ADD
		CONSTRAINT PK_reply
		PRIMARY KEY (
			replyidx
		);

/* 파일게시판 */
CREATE TABLE fileupload (
	fidx NUMBER NOT NULL, /* 자료실식별번호 */
	idx NUMBER NOT NULL, /* 글번호 */
	oriname VARCHAR2(100) NOT NULL, /* 원본파일이름 */
	savename VARCHAR2(110) NOT NULL, /* 저장파일이름 */
	fsize NUMBER NOT NULL, /* 파일크기 */
	cocode NUMBER /* 글상태 */
);

COMMENT ON TABLE fileupload IS '파일게시판';

COMMENT ON COLUMN fileupload.fidx IS '자료실식별번호';

COMMENT ON COLUMN fileupload.idx IS '글번호';

COMMENT ON COLUMN fileupload.oriname IS '원본파일이름';

COMMENT ON COLUMN fileupload.savename IS '저장파일이름';

COMMENT ON COLUMN fileupload.fsize IS '파일크기';

COMMENT ON COLUMN fileupload.cocode IS '글상태';

CREATE UNIQUE INDEX PK_fileupload
	ON fileupload (
		fidx ASC
	);

ALTER TABLE fileupload
	ADD
		CONSTRAINT PK_fileupload
		PRIMARY KEY (
			fidx
		);

/* 회원 */
CREATE TABLE member (
	id VARCHAR2(16) NOT NULL, /* 아이디 */
	pwd VARCHAR2(20) NOT NULL, /* 비밀번호 */
	name VARCHAR2(10) NOT NULL, /* 이름 */
	hp VARCHAR2(13) NOT NULL, /* 핸드폰번호 */
	grade NUMBER NOT NULL /* 등급코드 */
);

COMMENT ON TABLE member IS '회원';

COMMENT ON COLUMN member.id IS '아이디';

COMMENT ON COLUMN member.pwd IS '비밀번호';

COMMENT ON COLUMN member.name IS '이름';

COMMENT ON COLUMN member.hp IS '핸드폰번호';

COMMENT ON COLUMN member.grade IS '등급코드';

CREATE UNIQUE INDEX PK_member
	ON member (
		id ASC
	);

ALTER TABLE member
	ADD
		CONSTRAINT PK_member
		PRIMARY KEY (
			id
		);

/* 찜 목록 */
CREATE TABLE zzim_list (
	camidx NUMBER NOT NULL, /* 캠핑장식별번호 */
	id VARCHAR2(16) NOT NULL /* 아이디 */
);

COMMENT ON TABLE zzim_list IS '찜 목록';

COMMENT ON COLUMN zzim_list.camidx IS '캠핑장식별번호';

COMMENT ON COLUMN zzim_list.id IS '아이디';

CREATE UNIQUE INDEX PK_zzim_list
	ON zzim_list (
		camidx ASC,
		id ASC
	);

ALTER TABLE zzim_list
	ADD
		CONSTRAINT PK_zzim_list
		PRIMARY KEY (
			camidx,
			id
		);

/* 캠핑장 */
CREATE TABLE camp (
	camidx NUMBER NOT NULL, /* 캠핑장식별번호 */
	title VARCHAR2(50), /* 캠핑장명 */
	addr1 VARCHAR2(200), /* 캠핑장주소 */
	tel NUMBER, /* 캠핑장전화번호 */
	firstimage VARCHAR2(100) /* 캠핑장이미지 */
);

COMMENT ON TABLE camp IS '캠핑장';

COMMENT ON COLUMN camp.camidx IS '캠핑장식별번호';

COMMENT ON COLUMN camp.title IS '캠핑장명';

COMMENT ON COLUMN camp.addr1 IS '캠핑장주소';

COMMENT ON COLUMN camp.tel IS '캠핑장전화번호';

COMMENT ON COLUMN camp.firstimage IS '캠핑장이미지';

CREATE UNIQUE INDEX PK_camp
	ON camp (
		camidx ASC
	);

ALTER TABLE camp
	ADD
		CONSTRAINT PK_camp
		PRIMARY KEY (
			camidx
		);

/* 게시판 타입 */
CREATE TABLE b_type (
	typeno NUMBER NOT NULL, /* 게시판형식번호 */
	btype_name VARCHAR2(100) NOT NULL /* 게시판타입 */
);

COMMENT ON TABLE b_type IS '게시판 타입';

COMMENT ON COLUMN b_type.typeno IS '게시판형식번호';

COMMENT ON COLUMN b_type.btype_name IS '게시판타입';

CREATE UNIQUE INDEX PK_b_type
	ON b_type (
		typeno ASC
	);

ALTER TABLE b_type
	ADD
		CONSTRAINT PK_b_type
		PRIMARY KEY (
			typeno
		);

/* 게시판 카테고리 */
CREATE TABLE b_cat (
	ccode NUMBER NOT NULL, /* 카테고리코드 */
	cname VARCHAR2(100) NOT NULL /* 카테고리이름 */
);

COMMENT ON TABLE b_cat IS '게시판 카테고리';

COMMENT ON COLUMN b_cat.ccode IS '카테고리코드';

COMMENT ON COLUMN b_cat.cname IS '카테고리이름';

CREATE UNIQUE INDEX PK_b_cat
	ON b_cat (
		ccode ASC
	);

ALTER TABLE b_cat
	ADD
		CONSTRAINT PK_b_cat
		PRIMARY KEY (
			ccode
		);

/* 답글게시판 */
CREATE TABLE reboard (
	reboardidx NUMBER NOT NULL, /* 답글식별번호 */
	idx NUMBER NOT NULL, /* 글번호 */
	ref NUMBER NOT NULL, /* 그룹번호 */
	dept NUMBER NOT NULL, /* 들여쓰기 */
	step NUMBER NOT NULL /* 답변정렬 */
);

COMMENT ON TABLE reboard IS '답글게시판';

COMMENT ON COLUMN reboard.reboardidx IS '답글식별번호';

COMMENT ON COLUMN reboard.idx IS '글번호';

COMMENT ON COLUMN reboard.ref IS '그룹번호';

COMMENT ON COLUMN reboard.dept IS '들여쓰기';

COMMENT ON COLUMN reboard.step IS '답변정렬';

CREATE UNIQUE INDEX PK_reboard
	ON reboard (
		reboardidx ASC
	);

ALTER TABLE reboard
	ADD
		CONSTRAINT PK_reboard
		PRIMARY KEY (
			reboardidx
		);

/* 관리자 */
CREATE TABLE adminmember (
	adminid VARCHAR2(16) NOT NULL, /* 관리자아이디 */
	adminpwd VARCHAR2(20) NOT NULL, /* 관리자비밀번호 */
	admingrade NUMBER NOT NULL /* 관리자등급 */
);

COMMENT ON TABLE adminmember IS '관리자';

COMMENT ON COLUMN adminmember.adminid IS '관리자아이디';

COMMENT ON COLUMN adminmember.adminpwd IS '관리자비밀번호';

COMMENT ON COLUMN adminmember.admingrade IS '관리자등급';

CREATE UNIQUE INDEX PK_adminmember
	ON adminmember (
		adminid ASC
	);

ALTER TABLE adminmember
	ADD
		CONSTRAINT PK_adminmember
		PRIMARY KEY (
			adminid
		);

/* 회원등급 */
CREATE TABLE membergrade (
	grade NUMBER NOT NULL, /* 등급코드 */
	gname VARCHAR2(20) NOT NULL /* 등급명 */
);

COMMENT ON TABLE membergrade IS '회원등급';

COMMENT ON COLUMN membergrade.grade IS '등급코드';

COMMENT ON COLUMN membergrade.gname IS '등급명';

CREATE UNIQUE INDEX PK_membergrade
	ON membergrade (
		grade ASC
	);

ALTER TABLE membergrade
	ADD
		CONSTRAINT PK_membergrade
		PRIMARY KEY (
			grade
		);

/* 거래게시판 */
CREATE TABLE trade (
	tcode NUMBER NOT NULL, /* 거래코드 */
	tstatus VARCHAR2(10) NOT NULL /* 거래상태 */
);

COMMENT ON TABLE trade IS '거래게시판';

COMMENT ON COLUMN trade.tcode IS '거래코드';

COMMENT ON COLUMN trade.tstatus IS '거래상태';

CREATE UNIQUE INDEX PK_trade
	ON trade (
		tcode ASC
	);

ALTER TABLE trade
	ADD
		CONSTRAINT PK_trade
		PRIMARY KEY (
			tcode
		);

/* 글상태 */
CREATE TABLE c_status (
	cocode NUMBER NOT NULL, /* 글상태 */
	coname VARCHAR2(20) NOT NULL /* 상태명 */
);

COMMENT ON TABLE c_status IS '글상태';

COMMENT ON COLUMN c_status.cocode IS '글상태';

COMMENT ON COLUMN c_status.coname IS '상태명';

CREATE UNIQUE INDEX PK_c_status
	ON c_status (
		cocode ASC
	);

ALTER TABLE c_status
	ADD
		CONSTRAINT PK_c_status
		PRIMARY KEY (
			cocode
		);

ALTER TABLE board
	ADD
		CONSTRAINT FK_b_list_TO_board
		FOREIGN KEY (
			bcode
		)
		REFERENCES b_list (
			bcode
		);

ALTER TABLE board
	ADD
		CONSTRAINT FK_member_TO_board
		FOREIGN KEY (
			id
		)
		REFERENCES member (
			id
		);

ALTER TABLE board
	ADD
		CONSTRAINT FK_trade_TO_board
		FOREIGN KEY (
			tcode
		)
		REFERENCES trade (
			tcode
		);

ALTER TABLE board
	ADD
		CONSTRAINT FK_c_status_TO_board
		FOREIGN KEY (
			cocode
		)
		REFERENCES c_status (
			cocode
		);

ALTER TABLE b_list
	ADD
		CONSTRAINT FK_b_type_TO_b_list
		FOREIGN KEY (
			typeno
		)
		REFERENCES b_type (
			typeno
		);

ALTER TABLE b_list
	ADD
		CONSTRAINT FK_b_cat_TO_b_list
		FOREIGN KEY (
			ccode
		)
		REFERENCES b_cat (
			ccode
		);

ALTER TABLE reply
	ADD
		CONSTRAINT FK_board_TO_reply
		FOREIGN KEY (
			idx
		)
		REFERENCES board (
			idx
		);

ALTER TABLE reply
	ADD
		CONSTRAINT FK_c_status_TO_reply
		FOREIGN KEY (
			cocode
		)
		REFERENCES c_status (
			cocode
		);

ALTER TABLE fileupload
	ADD
		CONSTRAINT FK_board_TO_fileupload
		FOREIGN KEY (
			idx
		)
		REFERENCES board (
			idx
		);

ALTER TABLE fileupload
	ADD
		CONSTRAINT FK_c_status_TO_fileupload
		FOREIGN KEY (
			cocode
		)
		REFERENCES c_status (
			cocode
		);

ALTER TABLE member
	ADD
		CONSTRAINT FK_membergrade_TO_member
		FOREIGN KEY (
			grade
		)
		REFERENCES membergrade (
			grade
		);

ALTER TABLE zzim_list
	ADD
		CONSTRAINT FK_member_TO_zzim_list
		FOREIGN KEY (
			id
		)
		REFERENCES member (
			id
		);

ALTER TABLE zzim_list
	ADD
		CONSTRAINT FK_camp_TO_zzim_list
		FOREIGN KEY (
			camidx
		)
		REFERENCES camp (
			camidx
		);

ALTER TABLE reboard
	ADD
		CONSTRAINT FK_board_TO_reboard
		FOREIGN KEY (
			idx
		)
		REFERENCES board (
			idx
		);